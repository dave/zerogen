package main

import (
	"bytes"
	"testing"

	"github.com/davecgh/go-spew/spew"
)

func TestSimple(t *testing.T) {

	pkg := "github.com/mrsinham/zerogen/test/simple"
	structure := "simple"
	write := false
	b := &bytes.Buffer{}
	if err := parsePackage(&pkg, &structure, &write, b); err != nil {
		t.Fatal(err)
	}

	result := `// Code generated by github.com/mrsinham/zerogen. DO NOT EDIT.
package simple

func (s *simple) Reset() {
	s.field1 = 0
	s.field2 = ""
	s.field3 = nil
	s.field4 = [3]int{}
	s.field5 = nil
}
`
	if b.String() != result {
		t.Fatalf("result is not the same as expected : got %q expected %q", b.String(), result)
	}

}

func TestComposition(t *testing.T) {

	pkg := "github.com/mrsinham/zerogen/test/composition"
	structure := "composition"
	write := false
	b := &bytes.Buffer{}
	if err := parsePackage(&pkg, &structure, &write, b); err != nil {
		t.Fatal(err)
	}

	result := `// Code generated by github.com/mrsinham/zerogen. DO NOT EDIT.
package composition

func (c *composition) Reset() {
	c.subfield1 = 0
	c.subfield2 = ""
	c.fieldsimple = ""
}
`
	if b.String() != result {
		spew.Dump(b.String(), result)
		t.Fatalf("result is not the same as expected : got %q expected %q", b.String(), result)
	}

}
